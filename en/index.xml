<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Java Background Job Scheduler on JobRunr</title>
    <link>http://localhost:1313/en/</link>
    <description>Recent content in Distributed Java Background Job Scheduler on JobRunr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Apr 2024 09:00:00 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/en/homepage/quote-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/quote-01/</guid>
      <description>Thanks for building JobRunr, I like it a lot! Before that I used similar libraries in Ruby and Golang and JobRunr so far is the most pleasant one to use. I especially like the dashboard, it’s awesome!</description>
    </item>
    <item>
      <title>Fire-and-forget jobs</title>
      <link>http://localhost:1313/en/homepage/example-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-01/</guid>
      <description>Fire-and-forget jobs are executed only once and almost immediately after creation.&#xA;BackgroundJob.enqueue( () -&amp;gt; System.out.println(&amp;#34;Simple!&amp;#34;)); </description>
    </item>
    <item>
      <title>Simple</title>
      <link>http://localhost:1313/en/homepage/feature-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-01/</guid>
      <description>Easy to set up, easy to use. Add the jar from Maven Central and start scheduling jobs. An easy alternative for Spring Batch and Quartz Scheduler.&#xA;Background jobs are regular java methods with regular arguments – no super class or interface implementation required.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/en/homepage/quote-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/quote-02/</guid>
      <description>Just came across JobRunr on Github. Exactly what I have been looking for! Went through the source and completely inline with how software should be written. Simple, nicely architectured! Great job!</description>
    </item>
    <item>
      <title>Persistent</title>
      <link>http://localhost:1313/en/homepage/feature-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-02/</guid>
      <description>Background jobs are created in a persistent storage and supports RDBMS like MySql/MariaDB, PostgreSQL, Oracle, SQL Server, DB2 and also NoSQL databases like ElasticSearch, Redis and MongoDB.&#xA;You can safely restart your application and use JobRunr without worrying about losing jobs.</description>
    </item>
    <item>
      <title>Scheduled &amp; delayed jobs</title>
      <link>http://localhost:1313/en/homepage/example-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-02/</guid>
      <description>Scheduled and delayed jobs are also executed only once but will run at the specified time.&#xA;BackgroundJob.schedule(now().plusHours(5), () -&amp;gt; System.out.println(&amp;#34;Reliable!&amp;#34;)); </description>
    </item>
    <item>
      <title>Recurring CRON jobs</title>
      <link>http://localhost:1313/en/homepage/example-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-03/</guid>
      <description>Recurring jobs fire each time on the specified CRON trigger.&#xA;BackgroundJob.scheduleRecurrently(Cron.daily(), () -&amp;gt; service.doWork()); </description>
    </item>
    <item>
      <title>Transparent</title>
      <link>http://localhost:1313/en/homepage/feature-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-03/</guid>
      <description>Thanks to the built-in web interface, you have an overview of all your background jobs and observe the state of each job in detail.&#xA;Out of the box support for popular logging frameworks allows you to catch errors early with zero configuration.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/en/homepage/quote-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/quote-04/</guid>
      <description>Works perfectly, this framework is a lifesaver for me.</description>
    </item>
    <item>
      <title>Distributed</title>
      <link>http://localhost:1313/en/homepage/feature-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-05/</guid>
      <description>Background method calls and their arguments are serialized to JSON and can travel over JVM instances.&#xA;You can use JobRunr on different machines to get more processing power with no extra configuration – synchronization is performed automatically.</description>
    </item>
    <item>
      <title>Queues</title>
      <link>http://localhost:1313/en/homepage/example-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-04/</guid>
      <description>Specify a queue to bypass all jobs already enqueued so your critical business processes finish on-time.&#xA;@Job(queue = HighPrioQueue) public void doWork() { ... } </description>
    </item>
    <item>
      <title>Reliable</title>
      <link>http://localhost:1313/en/homepage/feature-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-04/</guid>
      <description>Once a background job was created without any exception, JobRunr takes the responsibility to process it at least once.&#xA;You are free to throw unhandled exceptions or terminate your application – background jobs will be re-tried automatically.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/en/homepage/quote-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/quote-05/</guid>
      <description>Omg&amp;hellip;. This being released like a year ago, would be great (for us). Instead, we are hitting a lot of walls trying to use Quartz to replace an old in-house job scheduler</description>
    </item>
    <item>
      <title>Batches &amp; job chaining</title>
      <link>http://localhost:1313/en/homepage/example-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-05/</guid>
      <description>Create a bunch of background jobs atomically using a batch and then chain a new job which will run when the complete batch finishes.&#xA;BackgroundJob .startBatch(this::sendEmailToEachSubscriber) .continueWith(() -&amp;gt; reportService.createReport(...)) .continueWith(() -&amp;gt; notifyService.notify(&amp;#34;sales-team&amp;#34;, ...)); </description>
    </item>
    <item>
      <title>Secure your JobRunr Dashboard with Anonymous Authentication</title>
      <link>http://localhost:1313/en/guides/authentication/anonymous-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/guides/authentication/anonymous-authentication/</guid>
      <description>JobRunr Pro allows to define a set of rules to restrict the access to the JobRunr Pro Dashboard and its underlying REST API. In this guide, you will learn how to utilize the AnonymousAuthenticationProvider to implement authorization rules without the need for user authentication.&#xA;Prerequisites JobRunr Pro 7.0.0 or later You already know how to configure JobRunr What is an AnonymousAuthenticationProvider The AnonymousAuthenticationProvider is a simple authentication provider that allows you to specify authorization rules that are checked whenever we visit the dashboard and for all access to the REST API endpoints.</description>
    </item>
    <item>
      <title>Extensible</title>
      <link>http://localhost:1313/en/homepage/feature-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-06/</guid>
      <description>Job filters allow you to add custom features to the background processing in a way similar to servlet filters.&#xA;Job storage access is fully abstracted and you can implement support for your favorite storage.</description>
    </item>
    <item>
      <title>Job chaining</title>
      <link>http://localhost:1313/en/homepage/example-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/example-06/</guid>
      <description>Specify a queue to bypass all jobs already enqueued so your critical business processes finish on-time.&#xA;BackgroundJob .enqueue(() -&amp;gt; archiveService.createArchive(folder)) .continueWith(() -&amp;gt; notifyService.notifyViaSlack(&amp;#34;ops-team&amp;#34;, &amp;#34;Folder archived: &amp;#34; + folder)) </description>
    </item>
    <item>
      <title>Efficient</title>
      <link>http://localhost:1313/en/homepage/feature-07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-07/</guid>
      <description>JobRunr takes just enough jobs into memory to process them efficiently and does not keep any locks on other jobs. This allows to distribute the jobs in the best possible manner.</description>
    </item>
    <item>
      <title>Self maintaining</title>
      <link>http://localhost:1313/en/homepage/feature-08/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-08/</guid>
      <description>You don&amp;rsquo;t need to perform manual storage clean-up – JobRunr keeps it as clean as possible and removes succeeded jobs automatically.</description>
    </item>
    <item>
      <title>Open source</title>
      <link>http://localhost:1313/en/homepage/feature-09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/homepage/feature-09/</guid>
      <description>JobRunr is open source software and is completely free for commercial use. It is licensed under LGPLv3 license.&#xA;Fork the project and make contributions on GitHub!</description>
    </item>
    <item>
      <title>Secure your JobRunr Dashboard with Basic Authentication</title>
      <link>http://localhost:1313/en/guides/authentication/basic-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/guides/authentication/basic-authentication/</guid>
      <description>Basic authentication is an HTTP standard used for access control. Basic authentication is already available to both JobRunr OSS and JobRunr Pro. JobRunr Pro provides enhanced security by configuring the BasicAuthenticationProvider, allowing you to set up authorization rules for each user. In this guide, we&amp;rsquo;ll show you how to leverage the BasicAuthenticationProvider to secure your dashboard with customized access control.&#xA;Do not use BasicAuthenticationProvider on a dashboard that is publicly available on the internet as this authentication can be brute forced.</description>
    </item>
    <item>
      <title>What is JobRunr, and why should you use it?</title>
      <link>http://localhost:1313/en/guides/intro/what-is-jobrunr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/guides/intro/what-is-jobrunr/</guid>
      <description>For Java developers struggling with asynchronous task execution—from sending emails in bulk to crunching numbers or processing large files, JobRunr offers a compelling solution. This developer-centric introduction dives into JobRunr, an open-source Java library that significantly simplifies background job processing. We&amp;rsquo;ll explore its core features, how it integrates into Java projects, and why it could be a game-changer for your development workflow.&#xA;Dive Into JobRunr JobRunr: An open-source marvel that eases background task execution in Java apps.</description>
    </item>
    <item>
      <title>JobRunr Pro Trial</title>
      <link>http://localhost:1313/en/try-jobrunr-pro/</link>
      <pubDate>Tue, 15 Mar 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/try-jobrunr-pro/</guid>
      <description>Are you interested in a trial of JobRunr Pro? Fill in the form below and we will send you all the necessary information to get started!</description>
    </item>
    <item>
      <title>JobRunr Pro Subscription</title>
      <link>http://localhost:1313/en/get-jobrunr-pro/</link>
      <pubDate>Tue, 15 Mar 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/get-jobrunr-pro/</guid>
      <description>Ready to get a JobRunr Pro Subscription? Fill in the form below and all the necessary information to get started will be sent to you!</description>
    </item>
    <item>
      <title>Create and schedule jobs with JobRunr using only a Java lambda</title>
      <link>http://localhost:1313/en/guides/intro/java-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/guides/intro/java-lambda/</guid>
      <description>In this guide, we will learn how to:&#xA;setup JobRunr learn how to enqueue and schedule a job in vanilla Java or your favorite web framework using only a Java 8 lambda monitor your jobs using the built-in dashboard What is JobRunr Introduction JobRunr is a library that we can embed in our application and which allows us to schedule background jobs using a Java 8 lambda. We can use any existing method of our Spring services to create a job without the need to implement an interface.</description>
    </item>
    <item>
      <title>Create and schedule jobs with JobRunr using a JobRequest and JobRequestHandler</title>
      <link>http://localhost:1313/en/guides/intro/java-job-request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/guides/intro/java-job-request/</guid>
      <description>In this guide, we will learn how to:&#xA;setup JobRunr learn how to enqueue and schedule a job in vanilla Java or your favorite web framework using the JobRequest / JobRequestHandler pattern. monitor your jobs using the built-in dashboard What is JobRunr Introduction JobRunr is a library that we can embed in our application and which allows us to schedule background jobs using a Java 8 lambda. We can use any existing method of our Spring services to create a job without the need to implement an interface.</description>
    </item>
    <item>
      <title>JobRunr and JobRunr Pro v7.0.0!</title>
      <link>http://localhost:1313/en/blog/2024-04-09-jobrunr-and-jobrunr-pro-v7/</link>
      <pubDate>Tue, 09 Apr 2024 09:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2024-04-09-jobrunr-and-jobrunr-pro-v7/</guid>
      <description>We&amp;rsquo;re proud to announce the latest release, JobRunr &amp;amp; JobRunr Pro v7.0.0</description>
    </item>
    <item>
      <title>Getting Started with JobRunr Pro</title>
      <link>http://localhost:1313/en/getting-started-with-jobrunr-pro/</link>
      <pubDate>Mon, 01 Apr 2024 10:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/getting-started-with-jobrunr-pro/</guid>
      <description>Learn all about how to get started with JobRunr Pro!</description>
    </item>
    <item>
      <title>JobRunr featured in Spring Tips!</title>
      <link>http://localhost:1313/en/blog/2024-03-27-jobrunr-in-spring-tips/</link>
      <pubDate>Sat, 30 Mar 2024 09:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2024-03-27-jobrunr-in-spring-tips/</guid>
      <description>The great Josh Long created an awesome introductionary video to JobRunr</description>
    </item>
    <item>
      <title>JobRunr 7 Webinar</title>
      <link>http://localhost:1313/en/webinar-v7/</link>
      <pubDate>Fri, 22 Mar 2024 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/webinar-v7/</guid>
      <description>Celebrate the new release together with us!</description>
    </item>
    <item>
      <title>Introducing Carbon-Aware Jobs in JobRunr</title>
      <link>http://localhost:1313/en/blog/2024-03-21-carbon-aware-job-scheduling/</link>
      <pubDate>Thu, 21 Mar 2024 09:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2024-03-21-carbon-aware-job-scheduling/</guid>
      <description>A Leap Towards Sustainable Computing</description>
    </item>
    <item>
      <title>Time for JobRunr v7.0.0!</title>
      <link>http://localhost:1313/en/blog/2024-03-15-jobrunr-v7-rc0/</link>
      <pubDate>Fri, 15 Mar 2024 09:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2024-03-15-jobrunr-v7-rc0/</guid>
      <description>We&amp;rsquo;re proud to announce the first release candidate of JobRunr &amp;amp; JobRunr Pro v7.0.0</description>
    </item>
    <item>
      <title>Global inventory at Scale - How Decathlon manages stock worldwide using JobRunr</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-decathlon/</link>
      <pubDate>Sun, 10 Mar 2024 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-decathlon/</guid>
      <description>In the dynamic retail sector, aligning physical and digital inventories is challenging, especially for Decathlon, which runs 1700 stores and handles millions of scans daily. Reliable, robust technology is crucial for managing this vast data. JobRunr stands out as the ideal tool, efficiently streamlining background task management.</description>
    </item>
    <item>
      <title>Rate Limiters</title>
      <link>http://localhost:1313/en/documentation/pro/rate-limiters/</link>
      <pubDate>Mon, 05 Feb 2024 14:19:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/rate-limiters/</guid>
      <description>A rate limiter allows to control the execution rate of Jobs to avoid overwhelming some resources like external APIs or databases. JobRunr provides mutexes as a mean to only allow a single execution from a set of Jobs at a time. Rate limiters gives more flexibility, the amount of concurrent jobs can be configured using the ConcurrentJobRateLimiter or the limit may be set over a time window using SlidingTimeWindowRateLimiter.</description>
    </item>
    <item>
      <title>Virtual Threads</title>
      <link>http://localhost:1313/en/documentation/configuration/virtual-threads/</link>
      <pubDate>Mon, 05 Feb 2024 14:19:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/configuration/virtual-threads/</guid>
      <description>Virtual threads are lightweight threads finalized in JDK 21. The introduction of virtual threads allows programs to use a larger number of threads than the amount of threads made available by the underlying OS.&#xA;A virtual thread only consumes an OS thread while performing calculations on the CPU, the OS thread is freed when performing a blocking I/O operation. This allows for an increased throughput as other virtual threads can execute while some are waiting due to I/O operations.</description>
    </item>
    <item>
      <title>More than 15.000 trees 🌳 planted!</title>
      <link>http://localhost:1313/en/blog/2024-01-18-trees-planted/</link>
      <pubDate>Thu, 18 Jan 2024 09:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2024-01-18-trees-planted/</guid>
      <description>Buy JobRunr Pro and plant trees!</description>
    </item>
    <item>
      <title>JobRunr at Devoxx 2023</title>
      <link>http://localhost:1313/en/blog/2023-09-19-jobrunr-devoxx/</link>
      <pubDate>Tue, 19 Sep 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-09-19-jobrunr-devoxx/</guid>
      <description>🎉 I&amp;rsquo;ll be talking about JobRunr at Devoxx 2023 in Antwerp, Belgium 🎉</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v6.3.0</title>
      <link>http://localhost:1313/en/blog/2023-07-14-jobrunr-v6.3.0/</link>
      <pubDate>Mon, 14 Aug 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-07-14-jobrunr-v6.3.0/</guid>
      <description>Stability improvements, Dashboard improvements, Micronaut 4 support, Kotlin 1.9 support and Job Timeouts!</description>
    </item>
    <item>
      <title>Junior Full Stack Engineer at JobRunr</title>
      <link>http://localhost:1313/en/jobs/full-stack-engineer/</link>
      <pubDate>Fri, 11 Aug 2023 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/jobs/full-stack-engineer/</guid>
      <description>Help shape us the future of JobRunr and contribute to open-source software!</description>
    </item>
    <item>
      <title>More than 3500 trees 🌳 planted!</title>
      <link>http://localhost:1313/en/blog/2023-06-17-jobrunr-loves-teamtrees/</link>
      <pubDate>Sat, 17 Jun 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-06-17-jobrunr-loves-teamtrees/</guid>
      <description>Part of the JobRunr revenue goes to #TeamTrees!</description>
    </item>
    <item>
      <title>JobRunr Pro Panic Button</title>
      <link>http://localhost:1313/en/blog/2023-06-06-jobrunr-pro-panic-button/</link>
      <pubDate>Tue, 06 Jun 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-06-06-jobrunr-pro-panic-button/</guid>
      <description>Stay calm and press the Panic Button&amp;hellip;</description>
    </item>
    <item>
      <title>Meet the Geek!</title>
      <link>http://localhost:1313/en/blog/2023-05-24-meet-the-geek/</link>
      <pubDate>Wed, 24 May 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-05-24-meet-the-geek/</guid>
      <description>Do you have questions about JobRunr? Are you struggling with a problem related to JobRunr? Then join a live coding session where I&amp;rsquo;ll try to answer all your questions!</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v6.2.0</title>
      <link>http://localhost:1313/en/blog/2023-05-11-jobrunr-v6.2.0/</link>
      <pubDate>Thu, 11 May 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-05-11-jobrunr-v6.2.0/</guid>
      <description>Performance improvements, Quarkus 3 support, an important bugfix and dynamic queues in JobRunr Pro!</description>
    </item>
    <item>
      <title>Java batch processing with JobRunr</title>
      <link>http://localhost:1313/en/blog/2023-04-11-java-batch-processing/</link>
      <pubDate>Tue, 11 Apr 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-04-11-java-batch-processing/</guid>
      <description>Discover the power of Java batch processing with JobRunr — a modern, user-friendly solution for distributed job management.</description>
    </item>
    <item>
      <title>Taming the Bursts: Efficient Cloud-Native Processing with JobRunr</title>
      <link>http://localhost:1313/en/blog/2023-03-30-cloud-native-processing/</link>
      <pubDate>Thu, 30 Mar 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-03-30-cloud-native-processing/</guid>
      <description>Discover how JobRunr helps manage high-demand tasks like pay-check calculations, retail promotions, and email campaigns by distributing load across multiple servers in any environment.</description>
    </item>
    <item>
      <title>JobRunr Has Processed more than 10 Billion Jobs Successfully in Less Than a Year</title>
      <link>http://localhost:1313/en/blog/2023-03-16-10-billion-jobs/</link>
      <pubDate>Thu, 16 Mar 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-03-16-10-billion-jobs/</guid>
      <description>A Testament to Its Power and Flexibility</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v6.1.0</title>
      <link>http://localhost:1313/en/blog/2023-02-24-jobrunr-v6.1.0/</link>
      <pubDate>Fri, 24 Feb 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-02-24-jobrunr-v6.1.0/</guid>
      <description>An important bugfix and Job Filters improved a lot!</description>
    </item>
    <item>
      <title>How to move from Quartz to JobRunr</title>
      <link>http://localhost:1313/en/blog/2023-02-20-moving-from-quartz-scheduler-to-jobrunr/</link>
      <pubDate>Mon, 20 Feb 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-02-20-moving-from-quartz-scheduler-to-jobrunr/</guid>
      <description>An in-depth guide on how to switch from Quartz Scheduler to JobRunr</description>
    </item>
    <item>
      <title>JobRunr - the best Java Scheduler?</title>
      <link>http://localhost:1313/en/blog/2023-02-13-java-scheduler/</link>
      <pubDate>Mon, 13 Feb 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-02-13-java-scheduler/</guid>
      <description>Easily schedule jobs in Java and monitor them using JobRunr</description>
    </item>
    <item>
      <title>JobRunr Kubernetes Autoscaling Internship</title>
      <link>http://localhost:1313/en/jobs/internship-kubernetes/</link>
      <pubDate>Mon, 06 Feb 2023 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/jobs/internship-kubernetes/</guid>
      <description>Deep dive into the cloud-native world!</description>
    </item>
    <item>
      <title>JobRunr ML Internship</title>
      <link>http://localhost:1313/en/jobs/internship-ml/</link>
      <pubDate>Mon, 06 Feb 2023 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/jobs/internship-ml/</guid>
      <description>Deep dive into ML to optimize job throughput</description>
    </item>
    <item>
      <title>JobRunr NoSQL Internship</title>
      <link>http://localhost:1313/en/jobs/internship-nosql/</link>
      <pubDate>Mon, 06 Feb 2023 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/jobs/internship-nosql/</guid>
      <description>Deep dive into the world of NoSQL</description>
    </item>
    <item>
      <title>JobRunr Performance Testing Internship</title>
      <link>http://localhost:1313/en/jobs/internship-testbed/</link>
      <pubDate>Mon, 06 Feb 2023 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/jobs/internship-testbed/</guid>
      <description>Deep dive into the world of performance tuning by setting up a repeatable test environment</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v6.0.0</title>
      <link>http://localhost:1313/en/blog/2023-01-29-jobrunr-v6.0.0/</link>
      <pubDate>Sun, 29 Jan 2023 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2023-01-29-jobrunr-v6.0.0/</guid>
      <description>New API, Job labels and a bunch of dashboard improvements!</description>
    </item>
    <item>
      <title>JobRunr in the media</title>
      <link>http://localhost:1313/en/blog/2022-12-06-jobrunr-in-the-news/</link>
      <pubDate>Tue, 06 Dec 2022 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-12-06-jobrunr-in-the-news/</guid>
      <description>Did you already know that JobRunr is featured on Thoughtworks technology radar?</description>
    </item>
    <item>
      <title>Oooh, the irony</title>
      <link>http://localhost:1313/en/blog/2022-11-05-jobrunr-and-daylight-saving-time/</link>
      <pubDate>Sat, 05 Nov 2022 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-11-05-jobrunr-and-daylight-saving-time/</guid>
      <description>A crime scene investigation on what went wrong with JobRunr when Daylight Saving Time ended.</description>
    </item>
    <item>
      <title>JobRunr and Daylight Saving Time</title>
      <link>http://localhost:1313/en/blog/2022-10-05-jobrunr-and-daylight-saving-time/</link>
      <pubDate>Wed, 05 Oct 2022 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-10-05-jobrunr-and-daylight-saving-time/</guid>
      <description>Let&amp;rsquo;s dig deeper on the impact of Daylight Saving Time and scheduled JobRunr Jobs</description>
    </item>
    <item>
      <title>JobRunr v5.3.0</title>
      <link>http://localhost:1313/en/blog/2022-10-03-jobrunr-5.3.0/</link>
      <pubDate>Mon, 03 Oct 2022 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-10-03-jobrunr-5.3.0/</guid>
      <description>Support for Spring Boot 3.0.0 and Kotlin 1.7.20</description>
    </item>
    <item>
      <title>JobRunr v5.2.0</title>
      <link>http://localhost:1313/en/blog/2022-09-23-jobrunr-5.2.0/</link>
      <pubDate>Fri, 23 Sep 2022 09:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-09-23-jobrunr-5.2.0/</guid>
      <description>An important bugfix and some performance improvements</description>
    </item>
    <item>
      <title>JobRunr Intro Video</title>
      <link>http://localhost:1313/en/blog/2022-08-10-jobrunr-review-by-alex-gutjahr/</link>
      <pubDate>Tue, 20 Sep 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-08-10-jobrunr-review-by-alex-gutjahr/</guid>
      <description>An intro to JobRunr by Alex Gutjahr</description>
    </item>
    <item>
      <title>JobRunr at Spring.io!</title>
      <link>http://localhost:1313/en/blog/2022-06-13-jobrunr-at-springio/</link>
      <pubDate>Mon, 13 Jun 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-06-13-jobrunr-at-springio/</guid>
      <description>Did you miss Spring.io? Watch the JobRunr talk I gave at Spring.io Barcelona!</description>
    </item>
    <item>
      <title>Launching a developer product - part 2</title>
      <link>http://localhost:1313/en/blog/2022-06-10-my-own-product-part-2/</link>
      <pubDate>Fri, 10 Jun 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-06-10-my-own-product-part-2/</guid>
      <description>Jeeeejj! I have a 1000 stars in GitHub!</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro contributor license agreement</title>
      <link>http://localhost:1313/en/blog/2022-06-02-cla/</link>
      <pubDate>Thu, 02 Jun 2022 08:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-06-02-cla/</guid>
      <description>As JobRunr and it&amp;rsquo;s community is growing, it&amp;rsquo;s time to do some governance.</description>
    </item>
    <item>
      <title>JobRunr Pro increases developer productivity</title>
      <link>http://localhost:1313/en/blog/2022-05-09-jobrunr-increases-developer-productivity/</link>
      <pubDate>Tue, 17 May 2022 20:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-05-09-jobrunr-increases-developer-productivity/</guid>
      <description>Thanks to the JobRunr Pro Dashboard!</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v5.1.0</title>
      <link>http://localhost:1313/en/blog/2022-05-06-jobrunr-v5.1.0/</link>
      <pubDate>Fri, 06 May 2022 20:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-05-06-jobrunr-v5.1.0/</guid>
      <description>Kotlin 1.6.20 support and important bugfixes</description>
    </item>
    <item>
      <title>Spring.io Barcelona!</title>
      <link>http://localhost:1313/en/blog/2022-04-24-jobrunr-spring-io/</link>
      <pubDate>Sun, 24 Apr 2022 08:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-04-24-jobrunr-spring-io/</guid>
      <description>I&amp;rsquo;m happy to share that I can present JobRunr at Spring.io in Barcelona!</description>
    </item>
    <item>
      <title>How JobRunr Pro Empowers Brand Protection through Parallel Web Crawling and Sentiment Analysis</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-web-crawling-and-sentiment-analysis/</link>
      <pubDate>Sat, 09 Apr 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-web-crawling-and-sentiment-analysis/</guid>
      <description>Brand protection is more crucial than ever. JobRunr Pro, an advanced job scheduling platform, has emerged as a powerful tool for distributed web crawling and sentiment analysis by businesses that want to improve their brand protection strategy, leveraging parallel processing and monitoring tools to maximize efficiency and effectiveness.</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v5.0.0</title>
      <link>http://localhost:1313/en/blog/2022-03-30-jobrunr-v5.0.0/</link>
      <pubDate>Wed, 30 Mar 2022 08:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2022-03-30-jobrunr-v5.0.0/</guid>
      <description>New features and improvements to make your job scheduling life even easier!</description>
    </item>
    <item>
      <title>Leveraging JobRunr Pro for Efficient Medical Image Analysis in Med-Tech</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-image-analysis/</link>
      <pubDate>Thu, 10 Mar 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-image-analysis/</guid>
      <description>Medical image analysis plays a critical role in the diagnosis, monitoring, and treatment of various diseases. By implementing JobRunr Pro, a powerful background job SDK, to manage and distribute the medical image analysis over multiple servers, a med-tech company has increased throughput by a whopping 1000% while ensuring data privacy.</description>
    </item>
    <item>
      <title>Privacy Policy</title>
      <link>http://localhost:1313/en/privacy/</link>
      <pubDate>Fri, 04 Mar 2022 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/privacy/</guid>
      <description>Read all about our Privacy Policy.</description>
    </item>
    <item>
      <title>Java Cron Jobs</title>
      <link>http://localhost:1313/en/blog/2021-11-10-java-cron-job/</link>
      <pubDate>Wed, 10 Nov 2021 08:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-11-10-java-cron-job/</guid>
      <description>Need to run a CRON Job in Java? Try out JobRunr for all your recurring java CRON jobs!</description>
    </item>
    <item>
      <title>JobRunr &amp; JobRunr Pro v4.0.0</title>
      <link>http://localhost:1313/en/blog/2021-09-08-jobrunr-v4.0.0/</link>
      <pubDate>Tue, 14 Sep 2021 08:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-09-08-jobrunr-v4.0.0/</guid>
      <description>The biggest release since JobRunr v1.0.0</description>
    </item>
    <item>
      <title>Efficient Calculation of Extra Legal Benefits for Construction Workers with JobRunr Pro</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-benefit-calculation/</link>
      <pubDate>Tue, 10 Aug 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-benefit-calculation/</guid>
      <description>Social Security Funds are responsible for calculating and disbursing extra legal benefits for construction workers, taking into account a lot of data. With JobRunr Pro&amp;rsquo;s distributed nature and workflow feature, a Social Security Fund has significantly sped up the process, resulting in accurate and efficient calculations, document generation, and reporting.</description>
    </item>
    <item>
      <title>JobRunr Pro Streamlines VoIP Deployment for Telecom Solution Providers</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-hardware-programming/</link>
      <pubDate>Tue, 10 Aug 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-hardware-programming/</guid>
      <description>One of the main issues faced by VoIP providers is that the hardware is not always available or online when programming is needed. JobRunr Pro, a powerful background job processing library, offers an effective solution to this problem by automatically retrying until the programming of the hardware is successful.</description>
    </item>
    <item>
      <title>Streamlining Property Management Operations with JobRunr Pro</title>
      <link>http://localhost:1313/en/use-case/jobrunr-pro-property-management/</link>
      <pubDate>Tue, 10 Aug 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/use-case/jobrunr-pro-property-management/</guid>
      <description>Property management companies handle an extensive range of tasks, from updating property sales ads on various online marketplaces to ensuring timely rental payments and document contract signings. JobRunr Pro helps to automate these tasks, simplifying their software architecture and streamlines all property management operations.</description>
    </item>
    <item>
      <title>Trees planted!</title>
      <link>http://localhost:1313/en/blog/2021-08-03-license-sold/</link>
      <pubDate>Tue, 03 Aug 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-08-03-license-sold/</guid>
      <description>I&amp;rsquo;ve sold my second license and that resulted in trees being planted!</description>
    </item>
    <item>
      <title>JobRunr Pro v3.4.0</title>
      <link>http://localhost:1313/en/blog/2021-07-12-jobrunr-pro-v3.4.0/</link>
      <pubDate>Mon, 12 Jul 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-07-12-jobrunr-pro-v3.4.0/</guid>
      <description>JobRunr Pro Dashboard with Job Filtering - the backoffice to your code</description>
    </item>
    <item>
      <title>JobRunr v3.2.0 &amp; JobRunr Pro Release v3.3.0</title>
      <link>http://localhost:1313/en/blog/2021-07-04-jobrunr-v3.2.0/</link>
      <pubDate>Sun, 04 Jul 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-07-04-jobrunr-v3.2.0/</guid>
      <description>SQL Schema support and now also ready for Kotlin 1.5</description>
    </item>
    <item>
      <title>JobRunr Pro Release v3.2.0</title>
      <link>http://localhost:1313/en/blog/2021-06-24-jobrunr-pro-v3.2.0/</link>
      <pubDate>Thu, 24 Jun 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-06-24-jobrunr-pro-v3.2.0/</guid>
      <description>Clean code - clean dashboard!</description>
    </item>
    <item>
      <title>Custom delete policy</title>
      <link>http://localhost:1313/en/documentation/pro/custom-delete-policy/</link>
      <pubDate>Thu, 24 Jun 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/custom-delete-policy/</guid>
      <description>Do you have a recurring job that triggers every 5 minutes and only does a small check to see whether something needs to be processed? 95% of the time there is probably nothing to do and the job succeeds immediately. But, all these recurring jobs fill up your JobRunr Dashboard (a huge amount of succeeded and deleted jobs) and also fill up your database.&#xA;JobRunr already allows you to configure the deletion policy for all jobs in the JobRunr configuration.</description>
    </item>
    <item>
      <title>Database Fault Tolerance</title>
      <link>http://localhost:1313/en/documentation/pro/database-fault-tolerance/</link>
      <pubDate>Thu, 24 Jun 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/database-fault-tolerance/</guid>
      <description>JobRunr by defaults stops completely if my SQL / NoSQL database goes down and there is a reason for this - JobRunr namely uses your database for a lot of things:&#xA;Master node election for the BackgroundJobServer Fetching the details of a Job and update the state when it&amp;rsquo;s done Monitoring whether there are no zombie jobs (jobs that were being processed on a BackgroundJobServer node that crashed) Optimistic locking so that a job will be only executed once &amp;hellip; The moment JobRunr loses it’s connection to the database (or the database goes down), there will be a lot of threads that will try to read and write updates to the database but all of these will of course fail.</description>
    </item>
    <item>
      <title>Database Migrations</title>
      <link>http://localhost:1313/en/documentation/pro/database-migrations/</link>
      <pubDate>Thu, 24 Jun 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/database-migrations/</guid>
      <description>JobRunr will by default perform all database related migrations automatically for you.&#xA;If you are not allowed to have a user using DDL rights at runtime or if due to company policies, you cannot have JobRunr do the migrations for you, there are several options which we will discuss below. If you manually take control of your migrations, please note that we may introduce changes with a new to the database schema.</description>
    </item>
    <item>
      <title>Release v3.1.2</title>
      <link>http://localhost:1313/en/blog/2021-06-12-v3.1.2/</link>
      <pubDate>Sat, 12 Jun 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-06-12-v3.1.2/</guid>
      <description>Release v3.0.1 until v3.1.2 - small bugfixes!</description>
    </item>
    <item>
      <title>Release v3.0.0</title>
      <link>http://localhost:1313/en/blog/2021-05-26-v3.0.0/</link>
      <pubDate>Wed, 26 May 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-05-26-v3.0.0/</guid>
      <description>Release v3.0.0 - now supporting JHipster!</description>
    </item>
    <item>
      <title>v2.0.0 - Kotlin support!</title>
      <link>http://localhost:1313/en/blog/2021-04-26-v2.0.0/</link>
      <pubDate>Mon, 26 Apr 2021 21:00:00 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-04-26-v2.0.0/</guid>
      <description>Release v2.0.0 - now ready for Kotlin</description>
    </item>
    <item>
      <title>v1.3.0 - Small improvements</title>
      <link>http://localhost:1313/en/blog/2021-02-07-v1.3/</link>
      <pubDate>Sun, 07 Feb 2021 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2021-02-07-v1.3/</guid>
      <description>Release v1.3.0 - aka Made in Germany</description>
    </item>
    <item>
      <title>Trees planted!</title>
      <link>http://localhost:1313/en/blog/2020-11-18-license-sold/</link>
      <pubDate>Wed, 18 Nov 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-11-18-license-sold/</guid>
      <description>I&amp;rsquo;ve sold my first license and that resulted in trees being planted!</description>
    </item>
    <item>
      <title>v1.2.0 - Amazon DocumentDB</title>
      <link>http://localhost:1313/en/blog/2020-11-01-v1.2/</link>
      <pubDate>Sun, 01 Nov 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-11-01-v1.2/</guid>
      <description>Again support for a new datastore - this time for Amazon DocumentDB!</description>
    </item>
    <item>
      <title>v1.1.0 - Notifications</title>
      <link>http://localhost:1313/en/blog/2020-10-21-v1.1/</link>
      <pubDate>Wed, 21 Oct 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-10-21-v1.1/</guid>
      <description>New improvements for Spring and notifications for jobs that don&amp;rsquo;t exist anymore</description>
    </item>
    <item>
      <title>Deleting jobs</title>
      <link>http://localhost:1313/en/documentation/background-methods/deleting-jobs/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/deleting-jobs/</guid>
      <description>Sometimes you may want to delete a job that is scheduled, enqueued or already processing. This can be done easily via the Dashboard or even programmatically.&#xA;JobId jobId = BackgroundJob.enqueue(() -&amp;gt; myService.doWork()); BackgroundJob.delete(jobId); Thanks to the BackgroundJob.delete method, the job that was enqueued earlier on can be deleted. When the job is still enqueued or scheduled, things are easy - JobRunr changes the state of your Job to Deleted and all is well.</description>
    </item>
    <item>
      <title>Enqueueing jobs</title>
      <link>http://localhost:1313/en/documentation/background-methods/enqueueing-jobs/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/enqueueing-jobs/</guid>
      <description>Creating a background job with JobRunr is really easy. On this page you will learn how to:&#xA;create a single job using a Java 8 lambda create a single job using a JobRequest create many jobs using a Java 8 lambda create many jobs using a JobRequest JobRunr Pro Prevent duplicate jobs by an identifier JobRunr Pro Replace existing jobs Enqueueing a single background job Enqueueing a job using a Java 8 lambda As you already know from the 5 minute intro, you only need to pass a lambda with the corresponding method and its arguments to enqueue a background job:</description>
    </item>
    <item>
      <title>Frequently Asked Questions</title>
      <link>http://localhost:1313/en/documentation/faq/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/faq/</guid>
      <description>BackgroundJobServer FAQ Does JobRunr need open ports for distributing jobs? No, JobRunr does not require an open port for distributing the workload - this is orchestrated via the StorageProvider.&#xA;How is the coordination between different nodes done? Each BackgroundJobServer registers itself on startup in the StorageProvider. For an RDBMS, this is a plain old table called jobrunr_backgroundjobservers. The master is the server which is the longest running (so, the one that was registered as first node).</description>
    </item>
    <item>
      <title>Job Result</title>
      <link>http://localhost:1313/en/documentation/pro/results/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/results/</guid>
      <description>If your job returns a result, JobRunr serializes it and stores it via the StorageProvider in the database of your choice.&#xA;You can then fetch the result of that job using the id of the job.&#xA;void startWeatherPrediction(UUID cityId) { Observation observation = observationService.getLatestObservation(cityId); // the original observation BackgroundJob.enqueue(myId, () -&amp;gt; weatherService.predictWeather(cityId, observation)); } WeatherPrediction getWeatherPrediction(UUID cityId) { JobResultWithBackOffInfo jobResult = BackgroundJob.getJobResult(jobId); if(jobResult.isAvailable()) return jobResult.getResult(); throw new BackOffException(Instant.now().plus(jobResult.backoffPeriod())); } This fetches the result of the job if it is available.</description>
    </item>
    <item>
      <title>JobRunr compared</title>
      <link>http://localhost:1313/en/documentation/alternatives/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/alternatives/</guid>
      <description>Below you can find an external audit where JobRunr is compared to some alternatives.&#xA;This report was created on June 19, 2020 and updated on July 09, 2021.&#xA;Feature matrix The following tables provides an overview of each approach’s features.&#xA;Project characteristics JobRunr Quartz Native JEE (Timer, ExecutorService) Spring (scheduling support) db-scheduler Licence LGPL v3 Apache v2.0 GNU GPL v2 Apache v2.0 Apache v2.0 Cost Free Free Free Free Free Project health Actively maintained since April 2020,</description>
    </item>
    <item>
      <title>Recurring jobs</title>
      <link>http://localhost:1313/en/documentation/background-methods/recurring-jobs/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/recurring-jobs/</guid>
      <description>Creating a recurring job (either a CRON job or a job with a fixed defined interval) is just as simple as creating a background job – you only need to write a single line of code (and it is even less if you use the jobrunr-spring-boot-starter, jobrunr-micronaut-feature or the jobrunr-quarkus-extension ).&#xA;On this page you can learn about:&#xA;Create a recurring job using a CRON expression Create a recurring job using an Interval Managing recurring jobs Deleting recurring jobs JobRunr Pro Pause and Resume recurring jobs JobRunr Pro Advanced Cron Expressions JobRunr Pro Custom Recurring Job Schedules JobRunr Pro Recurring jobs missed during downtime JobRunr Pro Concurrent recurring jobs Important remarks!</description>
    </item>
    <item>
      <title>Replacing jobs</title>
      <link>http://localhost:1313/en/documentation/pro/replace-jobs/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/replace-jobs/</guid>
      <description>Do you need to replace an already enqueued job? Or a job that is already being processed? Thanks to the JobRunr Pro enqueueOrReplace and scheduleOrReplace you can update the existing job easily.&#xA;UUID cityId = city.getId(); Observation observation = observationService.getLatestObservation(cityId); // the original observation BackgroundJob.enqueue(myId, () -&amp;gt; weatherService.predictWeather(cityId, observation)); Observation observation = observationService.getLatestObservation(cityId); // the updated observation after a storm BackgroundJob.enqueueOrReplace(myId, () -&amp;gt; weatherService.predictWeather(cityId, observation)); This replaces the existing background job as it uses the same uuid to create the job.</description>
    </item>
    <item>
      <title>Scheduling jobs</title>
      <link>http://localhost:1313/en/documentation/background-methods/scheduling-jobs/</link>
      <pubDate>Wed, 16 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/scheduling-jobs/</guid>
      <description>Sometimes you may want to postpone a method invocation; for example, to send an email to newly registered users a day after their registration. To do this, just call the BackgroundJob.schedule method and pass the desired delay:&#xA;BackgroundJob.schedule&amp;lt;EmailService&amp;gt;(Instant.now().plus(24, ChronoUnit.HOURS), x -&amp;gt; x.sendNewlyRegisteredEmail()); You can also use the JobBuilder to achieve the same result:&#xA;BackgroundJob.create(aJob() .withName(&amp;#34;Send welcome email to newly registered users&amp;#34;) .scheduleIn(Duration.ofDays(1)) .&amp;lt;EmailService&amp;gt;withDetails(x -&amp;gt; x.sendNewlyRegisteredEmail())); Scheduling emails is also possible using the JobBuilder pattern JobRunr&amp;rsquo;s BackgroundJobServer periodically checks all scheduled jobs and enqueues them when it is time to run them, allowing workers to execute them.</description>
    </item>
    <item>
      <title>Finally, v1.0.0</title>
      <link>http://localhost:1313/en/blog/2020-09-24-jobrunr-v1.0/</link>
      <pubDate>Wed, 09 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-09-24-jobrunr-v1.0/</guid>
      <description>We&amp;rsquo;re there, JobRunr v1.0.0 is released!</description>
    </item>
    <item>
      <title>v0.9.16 &amp; 0.9.17 - ElasticSearch support</title>
      <link>http://localhost:1313/en/blog/2020-09-09-v09-17/</link>
      <pubDate>Wed, 09 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-09-09-v09-17/</guid>
      <description>ElasticSearch support, Redis and MongoDB improvements and almost at 1.0</description>
    </item>
    <item>
      <title>Contact us</title>
      <link>http://localhost:1313/en/contact/</link>
      <pubDate>Fri, 04 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/contact/</guid>
      <description>Considering a JobRunr Pro license? Contact us and we&amp;rsquo;ll see together whether JobRunr can bring any value to your business</description>
    </item>
    <item>
      <title>Download whitepaper</title>
      <link>http://localhost:1313/en/download-whitepaper/</link>
      <pubDate>Fri, 04 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/download-whitepaper/</guid>
      <description>Considering a JobRunr Pro license? Contact us and we&amp;rsquo;ll see together whether JobRunr can bring any value to your business</description>
    </item>
    <item>
      <title>JobRunr 6 Webinar</title>
      <link>http://localhost:1313/en/webinar-subscribed/</link>
      <pubDate>Fri, 04 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/webinar-subscribed/</guid>
      <description>Join us for a deep-dive in JobRunr 6!</description>
    </item>
    <item>
      <title>Launching a developer product - how hard is it?</title>
      <link>http://localhost:1313/en/blog/2020-09-04-my-own-product/</link>
      <pubDate>Fri, 04 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-09-04-my-own-product/</guid>
      <description>Is it worthwhile to start a freemium product for developers in the Java eco-system?</description>
    </item>
    <item>
      <title>v0.9.16 &amp; 0.9.17 - ElasticSearch support</title>
      <link>http://localhost:1313/en/blog/2020-08-13-v09-15/</link>
      <pubDate>Thu, 03 Sep 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-08-13-v09-15/</guid>
      <description>Redis and MongoDB improvements, ElasticSearch support and almost at 1.0</description>
    </item>
    <item>
      <title>About JobRunr</title>
      <link>http://localhost:1313/en/about/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/about/</guid>
      <description>The idea behind JobRunr and how I try to make the world a little bit better and greener.</description>
    </item>
    <item>
      <title>Advanced CRON expressions</title>
      <link>http://localhost:1313/en/documentation/pro/advanced-cron-expressions/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/advanced-cron-expressions/</guid>
      <description>JobRunr Pro has support for more difficult CRON expressions.&#xA;See some examples below:&#xA;BackgroundJob.scheduleRecurrently(Cron.firstDayOfTheMonth(10, 30), () -&amp;gt; System.out.println(&amp;#34;First day of the month!&amp;#34;)); This will run at 10:30 am on the first day of the month. BackgroundJob.scheduleRecurrently(Cron.firstBusinessDayOfTheMonth(10, 30), () -&amp;gt; System.out.println(&amp;#34;First business day of the month!&amp;#34;)); This will run at 10:30 am on the first business day of the month, even if the first day of the month is a Saturday or a Sunday BackgroundJob.</description>
    </item>
    <item>
      <title>Batches</title>
      <link>http://localhost:1313/en/documentation/pro/batches/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/batches/</guid>
      <description>Batches allow you to create a bunch of background jobs atomically. This means that if there was an exception during the creation of background jobs, none of them will be processed. Consider you want to send 1000 emails to your clients, and they really want to receive these emails. Here is the old way:&#xA;public class NewsletterService { @Inject private UserRepository userRepository; public void sendEmailsToAllSubscribers() { List&amp;lt;User&amp;gt; users = userRepository.</description>
    </item>
    <item>
      <title>CI / CD &amp; Job Migrations</title>
      <link>http://localhost:1313/en/documentation/pro/migrations/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/migrations/</guid>
      <description>Prevent JobNotFoundExceptions thanks to the JobRegressionGuard Are you applying some of Uncle Bob&amp;rsquo;s tips and tricks from his great book Clean Code? It probably also means you&amp;rsquo;re sometimes refactoring&amp;hellip; but what about your existing jobs in production? Won&amp;rsquo;t they break? Will you know if they break?&#xA;JobRunr Pro has you covered thanks to the JobRegressionGuard:&#xA;@Test void validateExistingJobs() { JobRegressionGuard jobRegressionGuard = new JobRegressionGuard(); jobRegressionGuard.validateJobs(&amp;#34;&amp;lt;url to your staging/production dashboard&amp;gt;&amp;#34;); } This simple unit test will notify you if you did some refactorings that are not compatible with the jobs in production.</description>
    </item>
    <item>
      <title>Dynamic Queues</title>
      <link>http://localhost:1313/en/documentation/pro/dynamic-queues/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/dynamic-queues/</guid>
      <description>Are you running a multi-tenant application? Or do you have diverse types of jobs where certain types of jobs could potentially trigger peak workloads? Use JobRunr&amp;rsquo;s built-in dynamic queues to make sure that there is some fair-use and all jobs get a fair amount of resources!&#xA;Note: JobRunr Pro supports unlimited dynamic queues and they can be used together with the priority queues.&#xA;Example Use Cases In a multi-tenant application where each tenant can initiate their own jobs, JobRunr ensures fair-use processing.</description>
    </item>
    <item>
      <title>GNU Lesser General Public License</title>
      <link>http://localhost:1313/en/licensing/lgpl/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/licensing/lgpl/</guid>
      <description>Copyright © 2007 Free Software Foundation, Inc. &amp;lt;&lt;a href=&#34;https://fsf.org/&#34;&gt;https://fsf.org/&lt;/a&gt;&amp;gt;</description>
    </item>
    <item>
      <title>Issue Tracking Integration</title>
      <link>http://localhost:1313/en/documentation/pro/issuetracking-integration/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/issuetracking-integration/</guid>
      <description>Some jobs may fail due to downtime of an external system, some unforeseen circumstances or perhaps due to a bug.&#xA;JobRunr Pro integrates with GitHub issues and Jira so you can easily create an issue in case of a job failure. It will prefill all fields so you can save time and do what you do best: create excelling software without bugs 😊.&#xA;Create an issue for failed jobs with 1 click in your issue tracking software.</description>
    </item>
    <item>
      <title>Job Filters</title>
      <link>http://localhost:1313/en/documentation/pro/job-filters/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/job-filters/</guid>
      <description>A Job Filter can be used to extend the functionality of JobRunr with extra business processes when a job succeeds or fails. They also exist in the free version but in the Pro version integration is a lot easier as any Spring / Micronaut / Quarkus Bean can become a Job Filter.&#xA;Usage To create a Job Filter, just implement a bean with the interface JobClientFilter or JobServerFilter. Other filters are also available like the ApplyStateFilter and the ElectStateFilter.</description>
    </item>
    <item>
      <title>Job time-outs</title>
      <link>http://localhost:1313/en/documentation/pro/job-timeout/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/job-timeout/</guid>
      <description>Do you have jobs that take forever due to some 3th party libraries that are unreliable? Or are your job executions sometimes stuck due to networking issues? With JobRunr Pro, you can have your jobs fail automatically if they take too long.&#xA;Usage via @Job annotation Using a job timeout is really easy, again thanks to the Job annotation. Just add the annotation to your service method and specify the job process timeout in ISO8601 Duration format:</description>
    </item>
    <item>
      <title>JobRunr Pro</title>
      <link>http://localhost:1313/en/pricing/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/pricing/</guid>
      <description>Save months of development time with &lt;a href=&#34;http://localhost:1313/en/documentation/pro/&#34; title=&#34;If you would develop the features of the Pro edition yourself, it would have an estimated cost of around 119.400 $\n(190 days of development at a rate of 600$). &#34;&gt;JobRunr Pro&lt;/a&gt; so you can handle the most difficult background job workflow challenges.</description>
    </item>
    <item>
      <title>JobRunr Pro Dashboard</title>
      <link>http://localhost:1313/en/documentation/pro/jobrunr-pro-dashboard/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/jobrunr-pro-dashboard/</guid>
      <description>The JobRunr Pro dashboard offers a lot of improvements that save your engineering teams a lot of time:&#xA;Find any Job using the search functionality Save time thanks to usability improvements JobRunr Pro Enterprise Restrict access using Single Sign On authentication JobRunr Pro Enterprise Embed the dashboard within Spring Server JobRunr Pro Enterprise GDPR compliant Dashboard Find any Job using the search functionality Are you processing millions of jobs? Do you need to find that one job and find out if it succeeded?</description>
    </item>
    <item>
      <title>Mutexes</title>
      <link>http://localhost:1313/en/documentation/pro/mutexes/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/mutexes/</guid>
      <description>A mutex is a mutually exclusive flag. It acts as a gate keeper to a resource allowing only one Job to use it and postpones all others jobs using the same mutex.&#xA;Usage via @Job annotation Using a mutex is as easy as using Queues and Server Tags, again thanks to the Job annotation. Just add it to your service method and specify the mutex to use&#xA;@Job(mutex = &amp;#34;virus-scanner&amp;#34;) public void onlyProcessOneJobAtTheSameTime() { System.</description>
    </item>
    <item>
      <title>Observability</title>
      <link>http://localhost:1313/en/documentation/pro/observability/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/observability/</guid>
      <description>Although the JobRunr Pro Dashboard gives instant insights how your jobs are doing, you may already have an observability platform like Jaeger, HoneyComb or New Relic running. JobRunr Pro out-of-the box integrates with many of these observability platforms so you can keep on top of things.&#xA;MicroMeter Job Timings JobRunr allows to export amount of jobs processed, average job duration, maximum job duration and other metrics like job failure count per job.</description>
    </item>
    <item>
      <title>Priority Queues</title>
      <link>http://localhost:1313/en/documentation/pro/priority-queues/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/priority-queues/</guid>
      <description>Are you processing millions of jobs? Do you have some high priority jobs that need to finish fast? Use JobRunr priority queues to make sure that critical jobs cut in front of already enqueued jobs.&#xA;Note: JobRunr Pro supports up to 5 different priority queues and they can be used together with the load-balancing feature.&#xA;Usage Using the Job Annotation Using queues could not have been easier thanks to the Job annotation.</description>
    </item>
    <item>
      <title>Real-time scheduling and enqueueing</title>
      <link>http://localhost:1313/en/documentation/pro/real-time-scheduling/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/real-time-scheduling/</guid>
      <description>Do your jobs need to run some jobs on an exact moment? JobRunr Pro will do realtime enqueueing out-of-the-box!&#xA;Some history For performance reasons, JobRunr fetches all the jobs that need to be executed during the whole next pollIntervalInSeconds. This allows JobRunr to query, update and save jobs in bulk and that&amp;rsquo;s the reason why scheduled and recurring jobs are sometimes performed a couple of seconds too early.&#xA;JobRunr Pro to the rescue!</description>
    </item>
    <item>
      <title>Royalty-free End-user License Agreement</title>
      <link>http://localhost:1313/en/licensing/royalty-free-eula/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/licensing/royalty-free-eula/</guid>
      <description>THIS LICENSE AGREEMENT DESCRIBES YOUR RIGHTS WITH RESPECT TO THE SOFTWARE AND ITS COMPONENTS.</description>
    </item>
    <item>
      <title>Server Tags</title>
      <link>http://localhost:1313/en/documentation/pro/server-tags/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/server-tags/</guid>
      <description>Do you have some jobs that can only be run on certain servers (e.g. jobs tied to a specific OS like Linux, Max and Windows)? Or do you want to run a job only on the server that created the job? JobRunr has you covered with Server Tags!&#xA;A BackgroundJobServer can have multiple server tags and a job can specify only one server tag via the Job annotation. If the server tag of the job matches any of the server tags of the server, the server is eligible to run the job.</description>
    </item>
    <item>
      <title>Standard End-user License Agreement</title>
      <link>http://localhost:1313/en/licensing/standard-eula/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/licensing/standard-eula/</guid>
      <description>THIS LICENSE AGREEMENT DESCRIBES YOUR RIGHTS WITH RESPECT TO THE SOFTWARE AND ITS COMPONENTS.</description>
    </item>
    <item>
      <title>Terms of Use</title>
      <link>http://localhost:1313/en/licensing/info/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/licensing/info/</guid>
      <description>All the license information you need&amp;hellip;</description>
    </item>
    <item>
      <title>Third Party Software Notices</title>
      <link>http://localhost:1313/en/licensing/third-party/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/licensing/third-party/</guid>
      <description>JobRunr products use software provided by third parties, including open source software. The following copyright statements and licenses apply to various components that are distributed with various JobRunr products. The JobRunr product that includes this file does not necessarily use all of the third party software components referred to below.&#xA;Licensee must fully agree and comply with these license terms or must not use these components. The third party license terms apply only to the respective software to which the license pertains, and the third party license terms do not apply to the JobRunr software.</description>
    </item>
    <item>
      <title>Transaction plugin</title>
      <link>http://localhost:1313/en/documentation/pro/transactions/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/transactions/</guid>
      <description>The JobRunr Spring Boot Starter and Micronaut integration come with an @Transactional plugin that makes sure your jobs join the transaction created by the framework.&#xA;@Inject private UserRepository userRepositoy; @Inject private JobScheduler jobScheduler; @Transactional public void createUserAndSendWelcomeEmail(User user) { userRepositoy.save(user); jobScheduler.&amp;lt;UserService&amp;gt;enqueue(x -&amp;gt; x.sendWelcomeEmail(user.id)); } Thanks to the @Transactional support, the whole method - including the job scheduling - is transactional.&#xA;How does it work? the JobRunr Spring Boot Starter and Micronaut Integration check whether they can participate in a transaction created by that framework.</description>
    </item>
    <item>
      <title>Workflows using Job Chains</title>
      <link>http://localhost:1313/en/documentation/pro/job-chaining/</link>
      <pubDate>Thu, 27 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/pro/job-chaining/</guid>
      <description>JobRunr&amp;rsquo;s job chaining and workflow capabilities enhance software development efficiency by enabling logical task sequencing and complex workflow management. This setup ensures tasks execute in order, maintaining data integrity and operational consistency, especially when subsequent processes depend on earlier outcomes. The Pro version offers advanced controls and insights, further optimizing performance and providing you with an instant overview of your business process.&#xA;Job chaining via continueWith and onFailure Running a job after another job succeeded @Inject private ArchiveService archiveService; @Inject private NotifyService notifyService; public void createArchiveAndNotify(String folder) { BackgroundJob .</description>
    </item>
    <item>
      <title>JobRunr, Project Loom and Virtual Threads</title>
      <link>http://localhost:1313/en/blog/2020-08-17-jobrunr-loom-virtual-threads/</link>
      <pubDate>Mon, 17 Aug 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-08-17-jobrunr-loom-virtual-threads/</guid>
      <description>After integrating the Virtual Threads of Project Loom, it&amp;rsquo;s time for a showdown between Java 11, Java 16 without Virtual Threads and Java 16 with Virtual Threads.</description>
    </item>
    <item>
      <title>v0.9.12 &amp; 0.9.13 - DB2 and GraalVM native</title>
      <link>http://localhost:1313/en/blog/2020-07-23-v09-13/</link>
      <pubDate>Thu, 23 Jul 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-07-23-v09-13/</guid>
      <description>Run your background jobs at warp speed thanks to GraalVM native mode.</description>
    </item>
    <item>
      <title>JobRunr is joining the OpenJDK Quality Outreach program</title>
      <link>http://localhost:1313/en/blog/2020-06-25-openjdk-quality-outreach/</link>
      <pubDate>Thu, 25 Jun 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-06-25-openjdk-quality-outreach/</guid>
      <description>We make sure JobRunr will run on all future JVM&amp;rsquo;s to come</description>
    </item>
    <item>
      <title>v0.9.10 &amp; v0.9.11 - Quarkus &amp; MicroProfile support</title>
      <link>http://localhost:1313/en/blog/2020-06-18-v09-11/</link>
      <pubDate>Thu, 18 Jun 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-06-18-v09-11/</guid>
      <description>JobRunr now supports MicroProfile and Quarkus using Json-B</description>
    </item>
    <item>
      <title>v0.9.9 - Usability and performance improvements</title>
      <link>http://localhost:1313/en/blog/2020-06-13-v09-9/</link>
      <pubDate>Sat, 13 Jun 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-06-13-v09-9/</guid>
      <description>A 10 to 15% performance increase and live updates in the dashboard</description>
    </item>
    <item>
      <title>Testing JobRunr against 12 different JVM&#39;s</title>
      <link>http://localhost:1313/en/blog/2020-06-01-testing-against-12-jvms/</link>
      <pubDate>Mon, 01 Jun 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-06-01-testing-against-12-jvms/</guid>
      <description>A hands-on tutorial on how JobRunr is tested against 12 different JVM&amp;rsquo;s using TestContainers.</description>
    </item>
    <item>
      <title>v0.9.7 &amp; v0.9.8 - Bugfixes, extra databases and JMX integration</title>
      <link>http://localhost:1313/en/blog/2020-05-28-v09-8/</link>
      <pubDate>Thu, 28 May 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-05-28-v09-8/</guid>
      <description>An overview of the new features in these incremental releases</description>
    </item>
    <item>
      <title>JobRunr ♥ Kubernetes ♥ Terraform</title>
      <link>http://localhost:1313/en/blog/2020-05-06-jobrunr-kubrnetes-terraform/</link>
      <pubDate>Wed, 06 May 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-05-06-jobrunr-kubrnetes-terraform/</guid>
      <description>Learn how to scale JobRunr to have a whopping 869% speed increase</description>
    </item>
    <item>
      <title>Background job dependencies</title>
      <link>http://localhost:1313/en/documentation/background-methods/background-jobs-dependencies/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/background-jobs-dependencies/</guid>
      <description>TLDR; If you are using either the JobRunr Spring Boot Starter, Micronaut Integration or Quarkus Extension, you can just have beans or services injected into your background job (e.g. the service class that you are calling) and JobRequestHandler.&#xA;How to deal with dependencies on other beans and/or services? In almost every job you’ll want to use other classes of your application to perform different work and keep your code clean and simple.</description>
    </item>
    <item>
      <title>Best practices</title>
      <link>http://localhost:1313/en/documentation/background-methods/best-practices/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/best-practices/</guid>
      <description>Make job arguments small and simple Method invocations (i.e. a job) are serialized during the creation process of the background job. Arguments are converted into Json strings using the JobMapper class. If you have complex entities and/or large objects; including arrays, it is better to place them into a database, and then pass only their identities to the background job.&#xA;So, instead of doing this:&#xA;public void backgroundMethod(Entity entity) { } Consider doing this:</description>
    </item>
    <item>
      <title>Credits</title>
      <link>http://localhost:1313/en/documentation/5-minute-intro/credits/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/5-minute-intro/credits/</guid>
      <description>Hangfire by Sergey Odinokov JobRunr is a port of Hangfire in .NET to Java and could not have exist without Hangfire being a great example.&#xA;License: LGPL v3&#xA;ASM ASM is used to read the byte code of the provided lambda and find the correct class method and arguments of the job to process in the background. These are then serialized to Json and stored in a StorageProvider.&#xA;License: BSD</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>http://localhost:1313/en/documentation/background-methods/dashboard/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/dashboard/</guid>
      <description>JobRunr includes a built-in dashboard which gives helpful insights into your background job methods. The dashboard allows you to see and control any aspect of background job processing - you have a detailed view on any exception that occurred and you can see the complete background job history.&#xA;By default, it is available on the following url: http://localhost:8000. Of course, this is configurable:&#xA;Using fluent configuration&#xA;JobRunr.configure() .useDashboard(8000) The dashboard will be started on port 8000 Using Spring configuration</description>
    </item>
    <item>
      <title>Dealing with exceptions</title>
      <link>http://localhost:1313/en/documentation/background-methods/dealing-with-exceptions/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/dealing-with-exceptions/</guid>
      <description>Bad things happen. Any method can throw different types of exceptions. These exceptions can be caused either by programming errors that require you to re-deploy the application, or transient errors, that can be fixed without additional deployment.&#xA;JobRunr handles all exceptions that occur both in internal (belonging to JobRunr itself), and external methods (jobs, filters and so on), so it will not bring down the whole application. All internal exceptions are logged (so, don’t forget to enable logging) and in the worst case, background processing of a job will be stopped after 10 retry attempts with a smart exponential back-off policy.</description>
    </item>
    <item>
      <title>Logging &amp; job progress</title>
      <link>http://localhost:1313/en/documentation/background-methods/logging-progress/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/logging-progress/</guid>
      <description>Some jobs take a very long time to complete - generating 1000&amp;rsquo;s of emails, do a batch import of some large xml or CSV files, &amp;hellip; . How to know whether your code is actually running and doing it&amp;rsquo;s actual job (pun intended)?&#xA;Say hello to job logging and the job progress bar.&#xA;Watch logging appear live from your actual job Logging JobRunr supports logging to the dashboard - new messages will appear as they&amp;rsquo;re logged, it is as if you&amp;rsquo;re looking at a real console.</description>
    </item>
    <item>
      <title>Passing arguments</title>
      <link>http://localhost:1313/en/documentation/background-methods/passing-arguments/</link>
      <pubDate>Thu, 30 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/documentation/background-methods/passing-arguments/</guid>
      <description>JobRunr supports the passing of arguments to background jobs, both for jobs being created with Java 8 lambda&amp;rsquo;s and for jobs being created with the JobRequest interface.&#xA;Since these arguments are serialized, consider their values carefully as they can blow up your StorageProvider. Most of the time it is more efficient to store concrete values in an application database and pass only their identifiers to your background jobs.&#xA;Remember that background jobs may be processed days or weeks after they were enqueued.</description>
    </item>
    <item>
      <title>Easily process long-running jobs with JobRunr</title>
      <link>http://localhost:1313/en/blog/2020-04-23-jobrunr-long-running-jobs/</link>
      <pubDate>Thu, 23 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-04-23-jobrunr-long-running-jobs/</guid>
      <description>A tutorial on how to use JobRunr, Spring Data JPA and Docx-Stamper to generate the salary slips for all employees of Acme Corp</description>
    </item>
    <item>
      <title>v0.9.0 - Dashboard improvements and Redis support!</title>
      <link>http://localhost:1313/en/blog/2020-04-20-v09-0/</link>
      <pubDate>Mon, 20 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-04-20-v09-0/</guid>
      <description>Time for a new release and we have some great new treats for you! A lot of time was spend improving the dashboard and we also have Redis support.</description>
    </item>
    <item>
      <title>Java batch processing made easy...</title>
      <link>http://localhost:1313/en/blog/2020-04-08-jobrunr-release/</link>
      <pubDate>Wed, 08 Apr 2020 11:12:23 +0200</pubDate>
      <guid>http://localhost:1313/en/blog/2020-04-08-jobrunr-release/</guid>
      <description>The birth of JobRunr - easy process long-running jobs!</description>
    </item>
  </channel>
</rss>
