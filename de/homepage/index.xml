<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepages on JobRunr</title>
    <link>https://www.jobrunr.io/de/homepage/</link>
    <description>Recent content in Homepages on JobRunr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://www.jobrunr.io/de/homepage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.jobrunr.io/de/homepage/quote-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/quote-01/</guid>
      <description>Thanks for building JobRunr, I like it a lot! Before that I used similar libraries in Ruby and Golang and JobRunr so far is the most pleasant one to use. I especially like the dashboard, it’s awesome!</description>
    </item>
    
    <item>
      <title>Einfach</title>
      <link>https://www.jobrunr.io/de/homepage/feature-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-01/</guid>
      <description>Einfach einzurichten, einfach zu bedienen. Fügen Sie das Glas von Maven Central hinzu und erstellen Sie Jobs. Eine einfache Alternative für Spring Batch und Quartz Scheduler.
Hintergrundjobs sind reguläre Java-Methoden mit regulären Argumenten - keine Implementierung von Superklassen oder Schnittstellen erforderlich.</description>
    </item>
    
    <item>
      <title>Fire-and-forget jobs</title>
      <link>https://www.jobrunr.io/de/homepage/example-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-01/</guid>
      <description>Fire-and-Forget-Jobs werden nur einmal und fast unmittelbar nach der Erstellung ausgeführt.
BackgroundJob.enqueue(  () -&amp;gt; System.out.println(&amp;#34;Simple!&amp;#34;)); </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.jobrunr.io/de/homepage/quote-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/quote-02/</guid>
      <description>Just came across JobRunr on Github. Exactly what I have been looking for! Went through the source and completely inline with how software should be written. Simple, nicely architectured! Great job!</description>
    </item>
    
    <item>
      <title>Dauerhaft</title>
      <link>https://www.jobrunr.io/de/homepage/feature-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-02/</guid>
      <description>Hintergrundjobs werden in einem dauerhaften Speicher erstellt und unterstützen RDBMS wie MySQL / MariaDB, PostgreSQL, Oracle, DB2 und auch NoSQL-Datenbanken wie ElasticSearch, Redis und MongoDB.
Sie können Ihre Anwendung sicher neu starten und JobRunr verwenden, ohne sich Gedanken über den Verlust von Jobs machen zu müssen.</description>
    </item>
    
    <item>
      <title>Geplante und verzögerte Jobs</title>
      <link>https://www.jobrunr.io/de/homepage/example-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-02/</guid>
      <description>Geplante Jobs werden ebenfalls nur einmal ausgeführt, jedoch zum angegebenen Zeitpunkt ausgeführt.
BackgroundJob.schedule(now().plusHours(5),  () -&amp;gt; System.out.println(&amp;#34;Reliable!&amp;#34;)); </description>
    </item>
    
    <item>
      <title>Transparant</title>
      <link>https://www.jobrunr.io/de/homepage/feature-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-03/</guid>
      <description>Dank der integrierten Weboberfläche haben Sie einen Überblick über alle Ihre Hintergrundjobs und können den Status jedes Jobs im Detail beobachten.
Durch die sofort einsatzbereite Unterstützung gängiger Protokollierungsframeworks können Sie Fehler frühzeitig und ohne Konfiguration erkennen.</description>
    </item>
    
    <item>
      <title>Wiederkehrende Jobs</title>
      <link>https://www.jobrunr.io/de/homepage/example-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-03/</guid>
      <description>Wiederkehrende Jobs werden jedes Mal nach dem angegebenen CRON-Zeitplan ausgelöst.
BackgroundJob.scheduleRecurrently(Cron.daily(),  () -&amp;gt; service.doWork()); </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.jobrunr.io/de/homepage/quote-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/quote-04/</guid>
      <description>Thanks for sharing. Very helping in a Kubernetes environment.</description>
    </item>
    
    <item>
      <title>Warteschlangen</title>
      <link>https://www.jobrunr.io/de/homepage/example-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-04/</guid>
      <description>Geben Sie eine Warteschlange an, um alle bereits in die Warteschlange gestellten Jobs zu umgehen, damit Ihre kritischen Geschäftsprozesse pünktlich abgeschlossen werden.
@Job(queue = HighPrioQueue) public void doWork() {  ... } </description>
    </item>
    
    <item>
      <title>Zuverlässig</title>
      <link>https://www.jobrunr.io/de/homepage/feature-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-04/</guid>
      <description>Sobald ein Hintergrundjob ausnahmslos erstellt wurde, übernimmt JobRunr die Verantwortung, ihn mindestens einmal zu verarbeiten.
Es steht Ihnen frei, nicht behandelte Ausnahmen auszulösen oder Ihre Anwendung zu beenden - Hintergrundjobs werden automatisch erneut versucht.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.jobrunr.io/de/homepage/quote-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/quote-05/</guid>
      <description>Omg&amp;hellip;. This being released like a year ago, would be great (for us). Instead, we are hitting a lot of walls trying to use Quartz to replace an old in-house job scheduler</description>
    </item>
    
    <item>
      <title>Batches &amp; Job Chaining</title>
      <link>https://www.jobrunr.io/de/homepage/example-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-05/</guid>
      <description>Erstellen Sie mithilfe eines Stapels atomar eine Reihe von Hintergrundjobs und verketten Sie dann einen neuen Job, der ausgeführt wird, wenn der gesamte Stapel abgeschlossen ist.
 BackgroundJob  .startBatch(this::sendEmailToEachSubscriber)  .continueWith(() -&amp;gt; reportService.createReport(...))  .continueWith(() -&amp;gt; notifyService.notify(&amp;#34;sales-team&amp;#34;, ...)); </description>
    </item>
    
    <item>
      <title>Distributiert</title>
      <link>https://www.jobrunr.io/de/homepage/feature-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-05/</guid>
      <description>Hintergrundmethodenaufrufe und ihre Argumente werden in JSON serialisiert und können über JVM-Instanzen übertragen werden.
Sie können JobRunr auf verschiedenen Computern verwenden, um ohne zusätzliche Konfiguration mehr Rechenleistung zu erhalten. Die Synchronisierung wird automatisch durchgeführt.</description>
    </item>
    
    <item>
      <title>Extensible</title>
      <link>https://www.jobrunr.io/de/homepage/feature-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-06/</guid>
      <description>Mit Jobfiltern können Sie der Hintergrundverarbeitung benutzerdefinierte Funktionen hinzufügen, ähnlich wie bei Servlet-Filtern.
Der Zugriff auf den Jobspeicher ist vollständig abstrahiert und Sie können die Unterstützung für Ihren bevorzugten Speicher implementieren. Das Dashboard unterstützt auch Änderungen.</description>
    </item>
    
    <item>
      <title>Job chaining</title>
      <link>https://www.jobrunr.io/de/homepage/example-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/example-06/</guid>
      <description>Specify a queue to bypass all jobs already enqueued so your critical business processes finish on-time.
BackgroundJob  .enqueue(() -&amp;gt; archiveService.createArchive(folder))  .continueWith(() -&amp;gt; notifyService.notifyViaSlack(&amp;#34;ops-team&amp;#34;, &amp;#34;Folder archived: &amp;#34; + folder)) </description>
    </item>
    
    <item>
      <title>Effizient</title>
      <link>https://www.jobrunr.io/de/homepage/feature-07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-07/</guid>
      <description>JobRunr nimmt gerade genug Jobs in den Speicher auf, um sie effizient zu verarbeiten, und sperrt keine anderen Jobs. Dies ermöglicht eine bestmögliche Verteilung der Aufträge.</description>
    </item>
    
    <item>
      <title>Selbsterhaltend</title>
      <link>https://www.jobrunr.io/de/homepage/feature-08/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-08/</guid>
      <description>Sie müssen keine manuelle Speicherbereinigung durchführen - JobRunr hält sie so sauber wie möglich und entfernt erfolgreiche Jobs automatisch.</description>
    </item>
    
    <item>
      <title>Open source</title>
      <link>https://www.jobrunr.io/de/homepage/feature-09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jobrunr.io/de/homepage/feature-09/</guid>
      <description>JobRunr ist Open Source Software und für die kommerzielle Nutzung völlig kostenlos. Es ist unter LGPLv3-Lizenz lizenziert.
Fork das Projekt und leiste Beiträge auf GitHub!</description>
    </item>
    
  </channel>
</rss>
